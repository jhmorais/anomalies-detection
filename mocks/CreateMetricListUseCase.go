// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	input "github.com/jhmorais/anomalies-detection/internal/usecases/ports/input"

	mock "github.com/stretchr/testify/mock"

	output "github.com/jhmorais/anomalies-detection/internal/usecases/ports/output"
)

// CreateMetricListUseCase is an autogenerated mock type for the CreateMetricListUseCase type
type CreateMetricListUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, dataset
func (_m *CreateMetricListUseCase) Execute(ctx context.Context, dataset *input.DatasetInput) (output.AnomaliesOutput, error) {
	ret := _m.Called(ctx, dataset)

	var r0 output.AnomaliesOutput
	if rf, ok := ret.Get(0).(func(context.Context, *input.DatasetInput) output.AnomaliesOutput); ok {
		r0 = rf(ctx, dataset)
	} else {
		r0 = ret.Get(0).(output.AnomaliesOutput)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *input.DatasetInput) error); ok {
		r1 = rf(ctx, dataset)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCreateMetricListUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreateMetricListUseCase creates a new instance of CreateMetricListUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreateMetricListUseCase(t mockConstructorTestingTNewCreateMetricListUseCase) *CreateMetricListUseCase {
	mock := &CreateMetricListUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
