// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// VarianceUseCase is an autogenerated mock type for the VarianceUseCase type
type VarianceUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, deviation
func (_m *VarianceUseCase) Execute(ctx context.Context, deviation []int) int {
	ret := _m.Called(ctx, deviation)

	var r0 int
	if rf, ok := ret.Get(0).(func(context.Context, []int) int); ok {
		r0 = rf(ctx, deviation)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

type mockConstructorTestingTNewVarianceUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewVarianceUseCase creates a new instance of VarianceUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewVarianceUseCase(t mockConstructorTestingTNewVarianceUseCase) *VarianceUseCase {
	mock := &VarianceUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
