// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// StandardDeviationUseCase is an autogenerated mock type for the StandardDeviationUseCase type
type StandardDeviationUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, variance
func (_m *StandardDeviationUseCase) Execute(ctx context.Context, variance int) float64 {
	ret := _m.Called(ctx, variance)

	var r0 float64
	if rf, ok := ret.Get(0).(func(context.Context, int) float64); ok {
		r0 = rf(ctx, variance)
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}

type mockConstructorTestingTNewStandardDeviationUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewStandardDeviationUseCase creates a new instance of StandardDeviationUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStandardDeviationUseCase(t mockConstructorTestingTNewStandardDeviationUseCase) *StandardDeviationUseCase {
	mock := &StandardDeviationUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
